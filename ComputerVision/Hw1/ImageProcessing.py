# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ImageProcessing.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import cv2
import numpy as np
import sys
import myEdge


class Window(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 400)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 114, 15))
        self.label.setObjectName("label")
        self.But1_1 = QtWidgets.QPushButton(self.centralwidget)
        self.But1_1.setGeometry(QtCore.QRect(20, 40, 161, 51))
        self.But1_1.setObjectName("But1_1")
        self.But1_2 = QtWidgets.QPushButton(self.centralwidget)
        self.But1_2.setGeometry(QtCore.QRect(20, 100, 161, 51))
        self.But1_2.setObjectName("But1_2")
        self.But1_3 = QtWidgets.QPushButton(self.centralwidget)
        self.But1_3.setGeometry(QtCore.QRect(20, 160, 161, 51))
        self.But1_3.setObjectName("But1_3")
        self.But1_4 = QtWidgets.QPushButton(self.centralwidget)
        self.But1_4.setGeometry(QtCore.QRect(20, 220, 161, 51))
        self.But1_4.setObjectName("But1_4")
        self.But3_4 = QtWidgets.QPushButton(self.centralwidget)
        self.But3_4.setGeometry(QtCore.QRect(420, 220, 161, 51))
        self.But3_4.setObjectName("But3_4")
        self.But3_2 = QtWidgets.QPushButton(self.centralwidget)
        self.But3_2.setGeometry(QtCore.QRect(420, 100, 161, 51))
        self.But3_2.setObjectName("But3_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(400, 0, 114, 15))
        self.label_2.setObjectName("label_2")
        self.But3_1 = QtWidgets.QPushButton(self.centralwidget)
        self.But3_1.setGeometry(QtCore.QRect(420, 40, 161, 51))
        self.But3_1.setObjectName("But3_1")
        self.But3_3 = QtWidgets.QPushButton(self.centralwidget)
        self.But3_3.setGeometry(QtCore.QRect(420, 160, 161, 51))
        self.But3_3.setObjectName("But3_3")
        self.But4_3 = QtWidgets.QPushButton(self.centralwidget)
        self.But4_3.setGeometry(QtCore.QRect(620, 160, 161, 51))
        self.But4_3.setObjectName("But4_3")
        self.But4_2 = QtWidgets.QPushButton(self.centralwidget)
        self.But4_2.setGeometry(QtCore.QRect(620, 100, 161, 51))
        self.But4_2.setObjectName("But4_2")
        self.But4_4 = QtWidgets.QPushButton(self.centralwidget)
        self.But4_4.setGeometry(QtCore.QRect(620, 220, 161, 51))
        self.But4_4.setObjectName("But4_4")
        self.But4_1 = QtWidgets.QPushButton(self.centralwidget)
        self.But4_1.setGeometry(QtCore.QRect(620, 40, 161, 51))
        self.But4_1.setObjectName("But4_1")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(600, 0, 114, 15))
        self.label_3.setObjectName("label_3")
        self.But2_2 = QtWidgets.QPushButton(self.centralwidget)
        self.But2_2.setGeometry(QtCore.QRect(220, 100, 161, 51))
        self.But2_2.setObjectName("But2_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(200, 0, 116, 15))
        self.label_4.setObjectName("label_4")
        self.But2_1 = QtWidgets.QPushButton(self.centralwidget)
        self.But2_1.setGeometry(QtCore.QRect(220, 40, 161, 51))
        self.But2_1.setObjectName("But2_1")
        self.But2_3 = QtWidgets.QPushButton(self.centralwidget)
        self.But2_3.setGeometry(QtCore.QRect(220, 160, 161, 51))
        self.But2_3.setObjectName("But2_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 25))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.img = []
        self.weak = []
        self.strong = []

        self.But1_1.clicked.connect(self.LoadImage)
        self.But1_2.clicked.connect(self.SplitColor)
        self.But1_3.clicked.connect(self.ConvertColor)
        self.But1_4.clicked.connect(self.TrackBar)
        self.But2_1.clicked.connect(self.Gaussian)
        self.But2_2.clicked.connect(self.Bilateral)
        self.But2_3.clicked.connect(self.Median)
        self.But3_1.clicked.connect(self.myGaussian)
        self.But3_2.clicked.connect(self.SobelX)
        self.But3_3.clicked.connect(self.SobelY)
        self.But3_4.clicked.connect(self.Magnitude)
        self.But4_1.clicked.connect(self.Resize)
        self.But4_2.clicked.connect(self.Translation)
        self.But4_3.clicked.connect(self.Rotation)
        self.But4_4.clicked.connect(self.Shearing)

    def Shearing(self):
        M = np.float32([[19 / 15, 3 / 5, -250 / 3], [-1 / 3, 1, 200 / 3]])
        self.img4 = cv2.warpAffine(self.img4, M, dsize = (400, 300))
        cv2.imshow("img", self.img4)

    def Rotation(self):
        M = cv2.getRotationMatrix2D(center= (128, 188), angle=10, scale=0.5)
        self.img4 = cv2.warpAffine(self.img4, M, dsize = (400, 300))
        cv2.imshow("img", self.img4)

    def Translation(self):
        M = np.float32([[1, 0, 0], [0, 1, 60]])
        self.img4 = cv2.warpAffine(self.img4, M, dsize = (400, 300))
        cv2.imshow("img", self.img4)

    def Resize(self):
        self.img4 = cv2.imread("Q4_Image/SQUARE-01.png")
        self.img4 = cv2.resize(self.img4, (256, 256), interpolation=cv2.INTER_AREA)
        cv2.imshow("img", self.img4)

    def Magnitude(self):
        mag = np.sqrt(np.square(self.Q3_img_Y.astype(np.float)) + np.square(self.Q3_img_X.astype(np.float)))
        mag = (mag - mag.min()) / (mag.max() - mag.min()) * 255
        cv2.imshow("Magnitude", mag.astype(np.uint8))

    def SobelY(self):
        cv2.imshow("Original Picture", self.Q3_img_gray)

        self.Q3_img_Y = myEdge.Conv(self.Q3_img_gray, option = "Sobel Y")
        cv2.imshow("After Sobel Y", self.Q3_img_Y)

    def SobelX(self):
        cv2.imshow("Original Picture", self.Q3_img_gray)

        self.Q3_img_X = myEdge.Conv(self.Q3_img_gray, option = "Sobel X")
        cv2.imshow("After Sobel X", self.Q3_img_X)

    def myGaussian(self):
        self.Q3_img_gray = cv2.imread("Q3_Image/House.jpg")
        cv2.imshow("Original Picture", self.Q3_img_gray)

        self.Q3_img_gray = myEdge.Conv(self.Q3_img_gray, option = "Gaussian")
        cv2.imshow("After Gaussian Blur", self.Q3_img_gray)
    
    def Median(self):
        ori = cv2.imread("Q2_Image/Lenna_ pepperSalt.jpg")
        cv2.imshow("Original Picture", ori)
        blur = cv2.medianBlur(ori, 3)
        cv2.imshow("Blur Picture 3X3", blur)
        blur2 = cv2.medianBlur(ori, 5)
        cv2.imshow("Blur Picture 5X5", blur2)

    def Bilateral(self):
        ori = cv2.imread("Q2_Image/Lenna_whiteNoise.jpg")
        cv2.imshow("Original Picture", ori)
        blur = cv2.bilateralFilter(ori, 9, 90, 90)
        cv2.imshow("Blur Picture", blur)
    
    def Gaussian(self):
        ori = cv2.imread("Q2_Image/Lenna_whiteNoise.jpg")
        cv2.imshow("Original Picture", ori)
        blur = cv2.GaussianBlur(ori, (5, 5), 0)
        cv2.imshow("Blur Picture", blur)
    
    def LoadImage(self):
        self.img = cv2.imread("Q1_Image/Sun.jpg")
        print("Height: ", self.img.shape[0], "\nWidth: ", self.img.shape[1])
        cv2.imshow("Sun", self.img)

    def SplitColor(self):
        B, G, R = cv2.split(self.img)
        zeros = np.zeros((self.img.shape[0], self.img.shape[1]), dtype = "uint8")

        cv2.imshow("red", cv2.merge([zeros, zeros, R]))
        cv2.imshow("green", cv2.merge([zeros, G, zeros]))
        cv2.imshow("blue", cv2.merge([B, zeros, zeros]))

    def ConvertColor(self):
        ans = cv2.cvtColor(self.img, cv2.COLOR_BGR2GRAY)
        cv2.imshow("Perceptually Weighted", ans)
        B, G, R = cv2.split(self.img)
        R = R.astype(np.int32)
        G = G.astype(np.int32)
        B = B.astype(np.int32)
        cv2.imshow("Average Weighted", ((R + G + B) / 3).astype(np.uint8))

    def TrackBar(self):
        def Update(x):
            value = cv2.getTrackbarPos("blend", "Blender")
            dst = cv2.addWeighted(self.weak, value / 255, self.strong, 1 - value / 255, 20)
            cv2.imshow("Blender", dst)
        self.weak = cv2.imread("Q1_Image/Dog_Weak.jpg")
        self.strong = cv2.imread("Q1_Image/Dog_Strong.jpg")
        cv2.namedWindow("Blender")
        cv2.createTrackbar("blend", "Blender", 0, 255, Update)
        cv2.setTrackbarPos("blend", "Blender", 255)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Image Processing"))
        self.label.setText(_translate("MainWindow", "1. Image Processing"))
        self.But1_1.setText(_translate("MainWindow", "1.1 Load Image"))
        self.But1_2.setText(_translate("MainWindow", "1.2 Color Separation"))
        self.But1_3.setText(_translate("MainWindow", "1.3 Color Transformation"))
        self.But1_4.setText(_translate("MainWindow", "1.4 Blending"))
        self.But3_4.setText(_translate("MainWindow", "3.4 Magnitude"))
        self.But3_2.setText(_translate("MainWindow", "3.2 Sobel X"))
        self.label_2.setText(_translate("MainWindow", "3. Edge Detection"))
        self.But3_1.setText(_translate("MainWindow", "3.1 Gaussian Blur"))
        self.But3_3.setText(_translate("MainWindow", "3.3 Sobel Y"))
        self.But4_3.setText(_translate("MainWindow", "4.3 Rotation, Scaling"))
        self.But4_2.setText(_translate("MainWindow", "4.2 Translation"))
        self.But4_4.setText(_translate("MainWindow", "4.4 Shearing"))
        self.But4_1.setText(_translate("MainWindow", "4.1 Resize"))
        self.label_3.setText(_translate("MainWindow", "4. Transforms"))
        self.But2_2.setText(_translate("MainWindow", "2.2 Bilateral Filter"))
        self.label_4.setText(_translate("MainWindow", "2. Image Smoothing"))
        self.But2_1.setText(_translate("MainWindow", "2.1 Gaussian Blur"))
        self.But2_3.setText(_translate("MainWindow", "2.3 Median Filter"))



if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Window()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
